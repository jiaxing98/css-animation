/* eslint-disable */

// @ts-nocheck

// noinspection JSUnusedGlobalSymbols

// This file was automatically generated by TanStack Router.
// You should NOT make any changes in this file as it will be overwritten.
// Additionally, you should also exclude this file from your linter and/or formatter to prevent it from being checked or modified.

import { Route as rootRouteImport } from './routes/__root'
import { Route as IndexRouteImport } from './routes/index'
import { Route as PlayPauseInfiniteSliderIndexRouteImport } from './routes/play-pause-infinite-slider/index'
import { Route as InkIndexRouteImport } from './routes/ink/index'
import { Route as R3dSliderIndexRouteImport } from './routes/3d-slider/index'

const IndexRoute = IndexRouteImport.update({
  id: '/',
  path: '/',
  getParentRoute: () => rootRouteImport,
} as any)
const PlayPauseInfiniteSliderIndexRoute =
  PlayPauseInfiniteSliderIndexRouteImport.update({
    id: '/play-pause-infinite-slider/',
    path: '/play-pause-infinite-slider/',
    getParentRoute: () => rootRouteImport,
  } as any)
const InkIndexRoute = InkIndexRouteImport.update({
  id: '/ink/',
  path: '/ink/',
  getParentRoute: () => rootRouteImport,
} as any)
const R3dSliderIndexRoute = R3dSliderIndexRouteImport.update({
  id: '/3d-slider/',
  path: '/3d-slider/',
  getParentRoute: () => rootRouteImport,
} as any)

export interface FileRoutesByFullPath {
  '/': typeof IndexRoute
  '/3d-slider': typeof R3dSliderIndexRoute
  '/ink': typeof InkIndexRoute
  '/play-pause-infinite-slider': typeof PlayPauseInfiniteSliderIndexRoute
}
export interface FileRoutesByTo {
  '/': typeof IndexRoute
  '/3d-slider': typeof R3dSliderIndexRoute
  '/ink': typeof InkIndexRoute
  '/play-pause-infinite-slider': typeof PlayPauseInfiniteSliderIndexRoute
}
export interface FileRoutesById {
  __root__: typeof rootRouteImport
  '/': typeof IndexRoute
  '/3d-slider/': typeof R3dSliderIndexRoute
  '/ink/': typeof InkIndexRoute
  '/play-pause-infinite-slider/': typeof PlayPauseInfiniteSliderIndexRoute
}
export interface FileRouteTypes {
  fileRoutesByFullPath: FileRoutesByFullPath
  fullPaths: '/' | '/3d-slider' | '/ink' | '/play-pause-infinite-slider'
  fileRoutesByTo: FileRoutesByTo
  to: '/' | '/3d-slider' | '/ink' | '/play-pause-infinite-slider'
  id:
    | '__root__'
    | '/'
    | '/3d-slider/'
    | '/ink/'
    | '/play-pause-infinite-slider/'
  fileRoutesById: FileRoutesById
}
export interface RootRouteChildren {
  IndexRoute: typeof IndexRoute
  R3dSliderIndexRoute: typeof R3dSliderIndexRoute
  InkIndexRoute: typeof InkIndexRoute
  PlayPauseInfiniteSliderIndexRoute: typeof PlayPauseInfiniteSliderIndexRoute
}

declare module '@tanstack/react-router' {
  interface FileRoutesByPath {
    '/': {
      id: '/'
      path: '/'
      fullPath: '/'
      preLoaderRoute: typeof IndexRouteImport
      parentRoute: typeof rootRouteImport
    }
    '/play-pause-infinite-slider/': {
      id: '/play-pause-infinite-slider/'
      path: '/play-pause-infinite-slider'
      fullPath: '/play-pause-infinite-slider'
      preLoaderRoute: typeof PlayPauseInfiniteSliderIndexRouteImport
      parentRoute: typeof rootRouteImport
    }
    '/ink/': {
      id: '/ink/'
      path: '/ink'
      fullPath: '/ink'
      preLoaderRoute: typeof InkIndexRouteImport
      parentRoute: typeof rootRouteImport
    }
    '/3d-slider/': {
      id: '/3d-slider/'
      path: '/3d-slider'
      fullPath: '/3d-slider'
      preLoaderRoute: typeof R3dSliderIndexRouteImport
      parentRoute: typeof rootRouteImport
    }
  }
}

const rootRouteChildren: RootRouteChildren = {
  IndexRoute: IndexRoute,
  R3dSliderIndexRoute: R3dSliderIndexRoute,
  InkIndexRoute: InkIndexRoute,
  PlayPauseInfiniteSliderIndexRoute: PlayPauseInfiniteSliderIndexRoute,
}
export const routeTree = rootRouteImport
  ._addFileChildren(rootRouteChildren)
  ._addFileTypes<FileRouteTypes>()
